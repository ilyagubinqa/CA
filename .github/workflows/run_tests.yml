name: Automated tests

on:
  push

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pytest
          pip install selenium
          pip install requests

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      - name: Set DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Run tests and save the results
        run: |
          pytest > test_txxx.txt || echo "Test failed" > test_results.txt

      - name: Run tests and send results to Slack
        run: |
          test_cases=(test_txxx test_vjav)
          for test_case in "${test_cases[@]}"
          do
            pytest $test_case > test_result.txt || echo "Test failed" > test_result.txt
            test_result=$(<test_result.txt)
            if [ "$test_result" = "Test passed successfully" ]; then
              TEST_STATUS="Click domains: Test passed successfully"
            else
              TEST_STATUS="Click domains: Test failed"
            fi
      
            # Отобразить значения для отладки перед выполнением curl
            echo "Text to be sent: $TEST_STATUS"
      
            # Отправить уведомление в Slack
            echo "URL: $SLACK_WEBHOOK_URL"
            curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL
          done

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL