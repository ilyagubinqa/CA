name: Automated tests

on:
  push

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        domain:
          - txxx
          - pornq
          - upornia
          - 100homemade
          - chikiporn
          - hclips
          - hdzog
          - hotmovs
          - porn555
          - pornforrelax
          - pornl
          - puporn
          - shemalez
          - shemaleztube
          - thegay
          - tubepornclassic
          - vjav
          - voyeurhit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pytest
          pip install selenium
          pip install requests
          pip install pytest-xdist

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      - name: Set DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Run tests for each domain and save the results
        run: |
          for domain in ${{ matrix.domain }}; do
            pytest -n auto -k "$domain" --json-report > test_$domain.json || echo "Test failed" > test_$domain.json
          done

      - name: Combine test results
        run: cat test_*.json > test_results.json

      - name: Send test results to Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          test_result=$(<test_results.json)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=All tests passed successfully ✅" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Some tests failed ❌" >> $GITHUB_ENV
          fi
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL