name: Automated tests

on:
  push

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        test_name: ["txxx", "pornq", "upornia", "100homemade", "chikiporn", "hclips", "hdzog", "hotmovs", "porn555", "pornforrelax", "pornl", "puporn", "shemalez", "shemaleztube", "thegay", "tubepornclassic", "vjav", "voyeurhit"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pytest
          pip install selenium
          pip install requests
          pip install pytest-xdist

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      - name: Set DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Run tests and save the results
        run: |
          results=""
          for test_name in txxx pornq upornia 100homemade chikiporn hclips hdzog hotmovs porn555 pornforrelax pornl puporn shemalez shemaleztube thegay tubepornclassic vjav voyeurhit; do
            pytest -k ${{ test_name }} > "test_${{ test_name }}.txt" || echo "Test failed" > "test_${{ test_name }}_results.txt"

            test_result=$(<"test_${{ test_name }}_results.txt")
            if [ "$test_result" = "Test passed successfully" ]; then
              results+="Click domains (${{ test_name }}):Test passed successfully ✅\n"
            else
              results+="Click domains (${{ test_name }}):Test failed ❌\n"
            fi
          done

          echo "$results" > all_test_results.txt

      - name: Send test results to Slack
        if: always()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          TEST_STATUS=$(<all_test_results.txt)
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" }" $SLACK_WEBHOOK_URL
