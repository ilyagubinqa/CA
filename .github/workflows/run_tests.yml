name: Automated tests

on:
  schedule:
    - cron: "*/30 * * * *"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install pytest
          pip install selenium
          pip install requests
          pip install pytest-xdist

      - name: Install Chrome
        run: |
          sudo apt-get update
          sudo apt-get install google-chrome-stable

      - name: Set DISPLAY variable
        run: echo "DISPLAY=:99" >> $GITHUB_ENV

      - name: Install Xvfb
        run: sudo apt-get install xvfb

      - name: Start Xvfb
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_txxx.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_txxx_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (txxx):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (txxx):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_pornq.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_pornq_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (pornq):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (pornq):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_upornia.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_upornia_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (upornia):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (upornia):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_100homemade.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_100homemade_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (100homemade):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (100homemade):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_chikiporn.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_chikiporn_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (chikiporn):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (chikiporn):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_hclips.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_hclips_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (hclips):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (hclips):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_hdzog.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_hdzog_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (hdzog):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (hdzog):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_hotmovs.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_hotmovs_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (hotmovs):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (hotmovs):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_porn555.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_porn555_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (porn555):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (porn555):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_pornforrelax.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_pornforrelax_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (pornforrelax):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (pornforrelax):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_pornl.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_pornl_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (pornl):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (pornl):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_puporn.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_puporn_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (puporn):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (puporn):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_shemalez.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_shemalez_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (shemalez):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (shemalez):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_shemaleztube.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_shemaleztube_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (shemaleztube):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (shemaleztube):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_thegay.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_thegay_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (thegay):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (thegay):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_tubepornclassic.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_tubepornclassic_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (tubepornclassic):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (tubepornclassic):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_vjav.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_vjav_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (vjav):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (vjav):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL

      - name: Run tests and save the results
        run: |
          pytest -n auto > test_voyeurhit.txt  || echo "Test failed" > test_results.txt

      - name: Use the test results
        run: |
          test_result=$(<test_voyeurhit_results.txt)
          if [ "$test_result" = "Test passed successfully" ]; then
            echo "TEST_STATUS=Click domains (voyeurhit):Test passed successfully" >> $GITHUB_ENV
          else
            echo "TEST_STATUS=Click domains (voyeurhit):Test failed" >> $GITHUB_ENV
          fi

      - name: Send test results to Slack
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
        run: |
          curl -X POST -H 'Content-type: application/json' --data "{ \"text\": \"$TEST_STATUS\", \"blocks\": [ { \"type\": \"section\", \"text\": { \"type\": \"mrkdwn\", \"text\": \"$TEST_STATUS\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}\" } } ] }" $SLACK_WEBHOOK_URL